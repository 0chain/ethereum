import React, { Component } from 'react';

// Styling the application
import { Layout } from "./Layout";
import './App.css';
import { Button, Table } from 'react-bootstrap';

// importing eth dependencies
import web3 from './web3';
import dts from './dStorage';

// 0chain dStorage Metadata generated by the client
import { ZBOX_METADATA } from './config';
import zbox from './zbox/zbox';

class App extends Component {

  state = {
    documentHash: ZBOX_METADATA.documentHash,
    authTicket: ZBOX_METADATA.authTicket,
    lookupHash: ZBOX_METADATA.lookupHash,
    ethAddress: '',
    blockNumber: '',
    transactionHash: '',
    gasUsed: '',
    txReceipt: '',
  };

  uploadMetadataToZbox = (event) => {
    event.stopPropagation()
    event.preventDefault()
    zbox.uploadFile()
  };

  batchUploadMetadataToZbox = (event) => {
    zbox.batchUploadFile()
  };

  onClick = async () => {
    try {
      this.setState({ blockNumber: "waiting..." });
      this.setState({ gasUsed: "waiting..." });

      await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {
        console.log(err, txReceipt);
        this.setState({ txReceipt });
      });

      await this.setState({ blockNumber: this.state.txReceipt.blockNumber });
      await this.setState({ gasUsed: this.state.txReceipt.gasUsed });
    }

    catch (error) {
      console.log(error);
    }
  }

  onPress = async (event) => {
    event.preventDefault();
    const accounts = await web3.eth.getAccounts();

    console.log('Sending from Metamask account: ' + accounts[0]);

    const ethAddress = await dts.options.address;
    this.setState({ ethAddress });

    await dts.methods.uploadMetadata(this.state.documentHash, this.state.authTicket, this.state.lookupHash).send({
      from: accounts[0]
    }, (error, transactionHash) => {
      console.log(transactionHash);
      this.setState({ transactionHash });
    });
  };

  render() {

    return (
      <React.Fragment>
        <Layout>
          <div className="text-center">
            <h1 className="text-white justify-center text-center"> 0Chain Integration with Ethereum </h1>
            <hr />
            <h4 className="text-white justify-center" >Step 1: Upload File to 0Chain</h4>
            <br />
            <Button onSubmit={this.uploadMetadataToZbox} className="text-center"> Upload </Button>
            <br />
            <br />
            <Button onSubmit={this.batchUploadMetadataToZbox} className="text-center"> Batch Upload </Button>
            <hr />
            <h4 className="text-white justify-center" >Step 2: Commit Metadata to Ethereum</h4>
            <br />
            <Button className="text-center" onClick={this.onPress}> Commit </Button>
            <div>
            </div>
            <hr />
            <h4 className="text-white justify-center" >Get Transaction Details </h4>
            <br />
            <Button onClick={this.onClick} className="text-center">Transaction Details</Button>
            <br />
            <br />
            <Table bordered responsive>
              <thead>
                <tr>
                  <th className="text-white">Ethereum Transaction Details</th>
                  <th className="text-white">Values</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Document Hash</td>
                  <td>{this.state.documentHash}</td>
                </tr>
                <tr>
                  <td>Lookup Hash</td>
                  <td>{this.state.lookupHash}</td>
                </tr>
                <tr>
                  <td>AuthTicket</td>
                  <td>{this.state.authTicket}</td>
                </tr>
                <tr>
                  <td>Ethereum Contract Address</td>
                  <td>{this.state.ethAddress}</td>
                </tr>
                <tr>
                  <td>Transaction Hash </td>
                  <td>{this.state.transactionHash}</td>
                </tr>
                <tr>
                  <td>Block Number </td>
                  <td>{this.state.blockNumber}</td>
                </tr>
                <tr>
                  <td>Gas Used</td>
                  <td>{this.state.gasUsed}</td>
                </tr>
              </tbody>
            </Table>
          </div>
        </Layout>
      </React.Fragment>
    );
  }
}
export default App;